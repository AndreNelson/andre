const int pingPin = 9;

  int A = 2;
  int B = 3; 
  int C = 4;
  int D = 5;
  int E = 6;
  int F = 7; 
  int G = 8;
  int H = 9;
  int cm = 0;

void setup() {
  // initialize serial communication:
  Serial.begin(9600);

   pinMode(2, OUTPUT);  // channel A  
  pinMode(3, OUTPUT);  // channel B   
  pinMode(4, OUTPUT);  // channel C
  pinMode(5, OUTPUT);  // channel D    
  pinMode(6, OUTPUT);  // channel E
  pinMode(7, OUTPUT);  // channel F
  pinMode(8, OUTPUT);  // channel G
  pinMode(9, OUTPUT);  // channel H
   pinMode(13, OUTPUT);
   pinMode(12, OUTPUT);
   pinMode(11, OUTPUT);
   pinMode(10, OUTPUT);

}

void loop() {
  // establish variables for duration of the ping,
  // and the distance result in inches and centimeters:
  long duration, inches, cm;

  // The PING))) is triggered by a HIGH pulse of 2 or more microseconds.
  // Give a short LOW pulse beforehand to ensure a clean HIGH pulse:
  pinMode(pingPin, OUTPUT);
  digitalWrite(pingPin, LOW);
  delayMicroseconds(2);
  digitalWrite(pingPin, HIGH);
  delayMicroseconds(5);
  digitalWrite(pingPin, LOW);

  // The same pin is used to read the signal from the PING))): a HIGH
  // pulse whose duration is the time (in microseconds) from the sending
  // of the ping to the reception of its echo off of an object.
  pinMode(pingPin, INPUT);
  duration = pulseIn(pingPin, HIGH);

  // convert the time into a distance
  cm = microsecondsToCentimeters(duration);

  Serial.print(inches);
  Serial.print("in, ");
  Serial.print(cm);
  Serial.print("cm");
  Serial.println();

  delay(100);

if (cm <= 150)
{
digitalWrite(A, HIGH);
  delay(500);
    digitalWrite(A, LOW);
    
  digitalWrite(B, HIGH);
   delay(500);
    digitalWrite(B, LOW);
    
  digitalWrite(C, HIGH);
   delay(500);
    digitalWrite(C, LOW);
  
  digitalWrite(D, HIGH);
   delay(500);
    digitalWrite(D, LOW);
  
  digitalWrite(E, HIGH);
     delay(500);
    digitalWrite(E, LOW);
  
  digitalWrite(F, HIGH);
  delay(500);
    digitalWrite(F, LOW);
    
  digitalWrite(G, HIGH);
  delay(500);
    digitalWrite(G, LOW);
    
  digitalWrite(H, HIGH);
  delay(500);
    digitalWrite(H, LOW);

    digitalWrite(13, HIGH);
  delay(500);
    digitalWrite(13, LOW);

     digitalWrite(12, HIGH);
  delay(500);
    digitalWrite(12, LOW);

     digitalWrite(11, HIGH);
  delay(500);
    digitalWrite(11, LOW);

     digitalWrite(10, HIGH);
  delay(500);
    digitalWrite(10, LOW);
}
}
long microsecondsToCentimeters(long microseconds) {
  // The speed of sound is 340 m/s or 29 microseconds per centimeter.
  // The ping travels out and back, so to find the distance of the
  // object we take half of the distance travelled.
  return microseconds / 29 / 2;
}
